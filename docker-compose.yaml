x-base-python: &x-base-python
  user: $USER
  build:
    context: .
    args:
    - INSTALL_DIR=${INSTALL_DIR}
    - USERNAME=$USER
  image: app-base-image:${TAG}
  env_file: .env
  working_dir: ${INSTALL_DIR}
  depends_on:
    - redis
    - postgres
  restart: on-failure
  networks:
    - main
  volumes:
    - .:/usr/src/app
  healthcheck:
    test: ./wait-for.sh postgres:5432 -- echo "PostgreSQL is up and running!"

services:
  api:
    <<: *x-base-python
    command: sh -c "alembic upgrade head && python crypto_converter/run.py api"
    container_name: api-${TAG}
    environment:
      - EXCHANGE_API_PORT=${EXCHANGE_API_PORT}
      - PORT_PREFIX=${PORT_PREFIX}
    ports:
      - "${PORT_PREFIX}000:${EXCHANGE_API_PORT}"

  quotes-consumer:
    <<: *x-base-python
    command: sh -c "python crypto_converter/run.py quotes-consumer"
    container_name: quotes-consumer-${TAG}


  redis:
    image: redis:latest
    command: "redis-server /etc/redis/redis.conf"
    networks:
      - main
    volumes:
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
    ports:
      - "6379:6379"


  postgres:
    container_name: postgres-${TAG}
    hostname: postgres
    image: postgres:latest
    networks:
      - main
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "${PORT_PREFIX}432:5432"
    restart: on-failure
    volumes:
      - postgresql-data-crypto-converter:/var/lib/postgresql/data
      - ./db_backup:/db_backup


networks:
  main:


volumes:
  postgresql-data-crypto-converter:
